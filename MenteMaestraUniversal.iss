; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "MenteMaestra"
#define MyAppVersion "1.0.0"
#define MyAppPublisher "MenteMaestra"
#define MyAppURL "https://educationfortheworld.com.py/"
#define MyAppExeName "MenteMaestra.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{E1276B7A-5AA9-4EAB-84AB-C76E009F677A}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={sd}\{#MyAppName}
DisableDirPage=yes
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
;el archivo de salida se va a llamar Sistemas nada mas.
OutputBaseFilename=Sistemas 
SetupIconFile="C:\NodeApps\ElectronApps\electronApps\electron-react-boilerplate\icon.ico"
Compression=lzma
SolidCompression=yes
;ArchitecturesAllowed = x64
ArchitecturesInstallIn64BitMode=x64 ia64
;se cambia esta linea para poder instalar en 64 bits por defecto (pero instala en 32bits si no es 64bits)

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Dirs]
Name: "{app}"; Permissions: users-full

[Files]
;archivos de 64 bits.
Source: "C:\NodeApps\ElectronApps\electronApps\electron-react-boilerplate\release\build\win-unpacked\MenteMaestra.exe"; DestDir: "{app}"; Check: IsX64;  Flags: ignoreversion
Source: "C:\NodeApps\ElectronApps\electronApps\electron-react-boilerplate\release\build\win-unpacked\*"; DestDir: "{app}"; Check: IsX64; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{src}\COVI\*"; DestDir: "{app}\resources\COVI\"; Check: IsX64; Flags: external;
Source: "{src}\INEM\*"; DestDir: "{app}\resources\INEM\"; Check: IsX64; Flags: external;
Source: "{src}\LITR\*"; DestDir: "{app}\resources\LITR\"; Check: IsX64; Flags: external;

;archivos de 32 bits

Source: "C:\NodeApps\ElectronApps\electronApps\electron-react-boilerplate\release\build\win-ia32-unpacked\MenteMaestra.exe"; DestDir: "{app}"; Check: IsX86;Flags: ignoreversion
Source: "C:\NodeApps\ElectronApps\electronApps\electron-react-boilerplate\release\build\win-ia32-unpacked\*"; DestDir: "{app}"; Check: IsX86; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{src}\COVI\*"; DestDir: "{app}\resources\COVI\"; Check: IsX86; Flags: external;
Source: "{src}\INEM\*"; DestDir: "{app}\resources\INEM\"; Check: IsX86; Flags: external;
Source: "{src}\LITR\*"; DestDir: "{app}\resources\LITR\"; Check: IsX86; Flags: external;

; como puede ver, los archivos  se agrupan en 2: los de 64 y 32 bits. Se agrega a cada linea Source  un atributo  Check: IsX86; para los de 32 bits y Check: IsX64; para los de 64. Esto quiere decir que segï¿½n la arquitectura se copian o no ciertos archivos
 ; esto lo que hace es llamar a la funcion Pascal agregada abajo 


; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Code]
procedure RunOtherInstaller;
var
  ResultCode: Integer;
begin
//SE CAMBIO Sistemasx64 a Sistemas nada mas.
  if not Exec(ExpandConstant('{app}\MenteMaestra'), '', '', SW_SHOWNORMAL,
    ewWaitUntilTerminated, ResultCode)
  then
    MsgBox('Other installer failed to run!' + #13#10 +
      SysErrorMessage(ResultCode), mbError, MB_OK);
end;
       //funcion pascal que valida la arquitectura del PC
function IsX64: Boolean;
begin
  Result := Is64BitInstallMode and (ProcessorArchitecture = paX64);
end;

function IsX86: Boolean;
begin
  Result := (Is64BitInstallMode=false) and (ProcessorArchitecture = paX86);
end;

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
